import { DbcData } from './types';
declare class Writer {
    file: string;
    constructor(file: string, overwrite?: boolean);
    /**
     * Main constructor class that will organize and write all
     * attributes of DbcData structure
     * @param data dbc data loaded or created using main DBC class
     */
    constructFile(data: DbcData): void;
    /**
     *
     * @param version Version of the dbc file
     */
    private writeVersion;
    private writeNamespace;
    /**
     * Speed of the CAN bus, typically expressed as 250, 500, etc
     * @param busConfiguration Speed of the CAN bus
     */
    private writeBusSpeed;
    /**
     * Generic list of nodes that exist for the CAN architecture
     * @param nodes List of nodes that are attached to messages and signals
     */
    private writeNodes;
    /**
     *
     * @param message Individual message to be written to the file
     */
    private writeMessagesAndSignals;
    /**
     *
     * @param signal Signal to be writen to dbc file
     */
    private writeSignal;
    /**
     * Main writer function for class. New line character will be added automatically
     * to each line, so subsquent calls to this function
     * will automatically start on the next line.
     *
     * @param line Line content to write to file
     * @param skipNextLine If next line should be a blank line
     */
    private writeLine;
    private writeBaseComment;
    private writeMessageAndSignalComments;
    private generateEnumTable;
    private writeValTable;
    private writeSignalTables;
}
export default Writer;
